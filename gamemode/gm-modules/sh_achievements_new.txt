-- Used to generate a function to points to player
local function PointGiverGenerator(pts)
    return function(_, ply) ply:PS_GivePoints(pts) end
end

local function AchStatProgressGenerator(stat, num)
    return function(self, ply) return ply:GetAchStat(stat, 0) / num end
end

wyodr.NAchievements = {
    ["kill50guards"] = {
        name = "Kill 50 guards",
        progress = AchStatProgressGenerator("guardkills", 50),
        on_achieve = PointGiverGenerator(35)
    },
    ["kill100guards"] = {
        name = "Kill 100 guards",
        progress = AchStatProgressGenerator("guardkills", 100),
        on_achieve = PointGiverGenerator(80)
    },
    ["jihad5times"] = {
        name = "Allahu Akbar",
        progress = AchStatProgressGenerator("allahuakbar", 5),
        on_achieve = PointGiverGenerator(120)
    },
    ["zombiefreeday"] = {
        name = "Become a zombie",
        progress = AchStatProgressGenerator("zombiefreeday", 5),
        on_achieve = PointGiverGenerator(70)
    },
    ["wardenelect15"] = {
        name = "Get elected as warden 15 times",
        progress = AchStatProgressGenerator("wardenelect", 15),
        on_achieve = PointGiverGenerator(30)
    },
    ["wardenelect25"] = {
        name = "Get elected as warden 25 times",
        progress = AchStatProgressGenerator("wardenelect", 25),
        on_achieve = PointGiverGenerator(50)
    },
    ["wardenelect50"] = {
        name = "Get elected as warden 50 times",
        progress = AchStatProgressGenerator("wardenelect", 50),
        on_achieve = PointGiverGenerator(100)
    },
    ["guardbanned"] = {
        name = "Democracy is a bitch",
        progress = AchStatProgressGenerator("voteguardban", 1),
        on_achieve = PointGiverGenerator(35)
    },
    ["50rounds"] = {
        name = "Play 50 rounds",
        progress = AchStatProgressGenerator("roundsplayed", 50),
        on_achieve = PointGiverGenerator(150)
    },
    ["flappy"] = {
        name = "Play flappy birds",
        progress = AchStatProgressGenerator("flappy", 1),
        on_achieve = PointGiverGenerator(25)
    },
    ["20freedays"] = {
        name = "Altruism",
        progress = AchStatProgressGenerator("freedaysgiven", 20),
        on_achieve = PointGiverGenerator(50)
    },
    ["guardbanjacob"] = {
        name = "Good luck with that",
        progress = AchStatProgressGenerator("jacobguardbanned", 1),
        on_achieve = PointGiverGenerator(15)
    },
    ["straight2dabank"] = {
        name = "Straight to the bank",
        progress = AchStatProgressGenerator("donations", 1),
        on_achieve = PointGiverGenerator(100)
    },
    ["joinsteamgroup"] = {
        name = "Join the Steam group",
        progress = function() return 0 end,
        on_achieve = PointGiverGenerator(50)
    }

}

local plymeta = FindMetaTable("Player")

function plymeta:GetAchStat(stat, def)
    if SERVER then
        return tonumber(self:GetPData("achstat_" .. stat, def)) or def 
    end
    return tonumber(self:GetNWInt("achstat_" .. stat, def)) or def
end

function plymeta:GetAchievementTable()
    if SERVER then
        if self.CachedAchTable then return self.CachedAchTable end
        local tbl = util.JSONToTable(self:GetPData("achievs_unlocked", "{}"))
        self:SetNWString("achievs_unlocked", util.TableToJSON(tbl))
        self.CachedAchTable = tbl
        return tbl
    end
    return util.JSONToTable(self:GetNWString("achievs_unlocked", "{}") or "{}")
end

function plymeta:HasAchievement(achid)
    local ach_table = self:GetAchievementTable()
    local has_ach = table.HasValue(ach_table, achid)
    if has_ach then return true end
    
    local progress = wyodr.NAchievements[achid]:progress(self)
    return false, progress
end
