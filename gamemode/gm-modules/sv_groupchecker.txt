wyodr.group_members = wyodr.group_members or {}
wyodr.group_member_update = wyodr.group_member_update or 0

local function UpdateGroupMembers(cb)
    http.Fetch("http://steamcommunity.com/gid/103582791435196069/memberslistxml/?xml=1", function(data)
        table.Empty(wyodr.group_members)
        for sid in string.gmatch(data, "<steamID64>(%d+)</steamID64>") do
            table.insert(wyodr.group_members, sid)
        end
       wyodr. group_member_update = CurTime()
        cb(wyodr.group_members)
    end)
end

hook.Add("PlayerInitialSpawn", "CheckPlyGroupMembership", function(ply)
    local function CheckSID()
        if not IsValid(ply) then return end
        if table.HasValue(wyodr.group_members, ply:SteamID64()) and not ply:HasAchievement("joinsteamgroup") then
            ply:GiveAchievement("joinsteamgroup")    
        end
    end

    timer.Simple(3, function()
        if wyodr.group_member_update < CurTime()-60*5 then
            UpdateGroupMembers(CheckSID)    
        else
            CheckSID()
        end
    end)
end)

hook.Add("RoundEnd", "CheckPlyGroupMembershipAFTERROUND", function()
    for k,ply in pairs(player.GetAll()) do 
        
        local function CheckSID()
            if not IsValid(ply) then return end
            if table.HasValue(wyodr.group_members, ply:SteamID64()) and not ply:HasAchievement("joinsteamgroup") then
                ply:GiveAchievement("joinsteamgroup")    
            end
        end
    
        timer.Simple(3, function()
            if wyodr.group_member_update < CurTime()-60*5 then
                UpdateGroupMembers(CheckSID)    
            else
                CheckSID()
            end
       end)
    end
end)