
surface.CreateFont("EJBStatDefault", {
	font = "Roboto",
	size = 18	
})
surface.CreateFont("EJBStatBold", {
	font = "Roboto",
	size = 18,
	weight = 800
})

local map_colors = {}

local golden_ratio_conjugate = 0.618033988749895

local clr_h = 0
local function GenerateAestheticallyPleasingColor()
	clr_h = (clr_h + golden_ratio_conjugate) % (math.pi*2)
	return HSVToColor(math.deg(clr_h), 0.5, 0.95)
end

local function GetMapColor(map)
	if map_colors[map] then return map_colors[map] end
	map_colors[map] = GenerateAestheticallyPleasingColor()
	map_colors[map].a = 100
	return map_colors[map]
end

local function timeToStr( time )
    local tmp = time
    local s = tmp % 60
    tmp = math.floor( tmp / 60 )
    local m = tmp % 60
    tmp = math.floor( tmp / 60 )
    local h = tmp % 24
    tmp = math.floor( tmp / 24 )
    local d = tmp % 7
    local w = math.floor( tmp / 7 )
    
    return string.format( "%02iw %id %02ih %02im %02is", w, d, h, m, s )
end

local function CreateStatFrame()
	if IsValid(StatFrame) then StatFrame:Remove() end

	StatFrame = vgui.Create("DFrame")
	StatFrame:SetSize(1200, 600)
	StatFrame:Center()
	
	local panel = vgui.Create("DButton", StatFrame)
	panel:SetText("")
	panel:Dock(FILL)
	panel.Paint = function(self, w, h)
		surface.SetDrawColor(255, 255, 255)
		surface.DrawRect(0, 0, w, h)
		
		local sv_time_diff = os.time() - EjbSvTime
		
		local nmx, nmy = gui.MousePos()
		local mx, my = StatFrame:GetPos()
		local px, py = self:GetPos()
		nmx, nmy = nmx - mx - px, nmy - my - py
		
		local clr_solid_red, clr_solid_green, clr_solid_blue, clr_solid_black, clr_tp_black = 
		                                                                        Color(255, 0, 0),
																				Color(0, 255, 0),
																				Color(0, 0, 255),
																				Color(0, 0, 0),
																				Color(0, 0, 0, 150)
		
		local lx, ly
		local labeled_time
		for i,ejbst in ipairs(EjbStats) do
			local val = ejbst.c
			local x, y = math.Remap(i*2, 1*1, 600*2, 0, w), h-math.Remap(val, 0, 35, 50, 600)
			local ejbst_t = tonumber(ejbst.t)
			local ejbst_a = tonumber(ejbst.a) or -1
			
			surface.SetDrawColor(GetMapColor(ejbst.m))
			surface.DrawRect(x, 0, 2, h)
			
			if (nmx-x) >= 0 and (nmx-x)  < 2 then
				draw.SimpleText(os.date("%d.%m", ejbst_t), "EJBStatBold", x, h-35, clr_solid_red)
				draw.SimpleText(os.date("%H:%M", ejbst_t), "EJBStatBold", x, h-20, clr_solid_red)
				draw.SimpleText(os.date("%d.%m", ejbst_t-sv_time_diff), "EJBStatBold", x+60, h-35, clr_solid_black)
				draw.SimpleText(os.date("%H:%M", ejbst_t-sv_time_diff), "EJBStatBold", x+60, h-20, clr_solid_black)
				
				draw.SimpleText(string.format("Median playtime: %s", timeToStr(ejbst_a)), "EJBStatBold", x, h-50, clr_solid_blue)
				
				draw.SimpleText(tostring(val), "EJBStatBold", x, y+3, clr_solid_red, TEXT_ALIGN_LEFT, TEXT_ALIGN_TOP)
				draw.SimpleText(ejbst.m, "EJBStatBold", x, 20, clr_solid_red)
				surface.SetDrawColor(255, 0, 0)
				surface.DrawLine(x, 0, x, h)
				
				self.HoveringTime = ejbst_t
			end
			
			if lx and ly then
				surface.SetDrawColor(0, 0, 0)
				surface.DrawLine(lx, ly, x, y)
				if not labeled_time or (labeled_time-60*180) >= ejbst_t then
					if labeled_time and os.date("%d", labeled_time) ~= os.date("%d", ejbst_t) then
						draw.SimpleText(os.date("%d.%m", ejbst_t), "EJBStatDefault", x, h-35, clr_tp_black, TEXT_ALIGN_CENTER)
					end
					draw.SimpleText(os.date("%H:%M", ejbst_t), "EJBStatDefault", x, h-20, clr_tp_black, TEXT_ALIGN_CENTER)
					labeled_time = ejbst_t
					surface.SetDrawColor(255, 0, 0, 100)
					surface.DrawLine(x, 0, x, h)
				end
			end
			
			lx, ly = x, y
		end
		
		draw.SimpleText(string.format("Current date: %s", os.date("%d.%m.%Y %H:%m")), "EJBStatDefault", 10, 10, Color(0, 0, 0))
		draw.SimpleText(string.format("Server date: %s", os.date("%d.%m.%Y %H:%m", EjbSvTime)), "EJBStatDefault", 10, 25, Color(0, 0, 0))
		draw.SimpleText(string.format("Current mousex: %d %d", nmx, nmy), "EJBStatDefault", 10, 40, Color(0, 0, 0))
		
		surface.SetFont("EJBStatBold")
		
		--[[local lx, ly = 240, 10
		for map,mapclr in pairs(map_colors) do
			
			local tswidth = surface.GetTextSize(map) + 35
			
			if lx+tswidth > w then
				lx, ly = 240, ly + 30
			end
			
			surface.SetDrawColor(0, 0, 0)
			surface.DrawRect(lx, ly, 25, 25)
			
			surface.SetDrawColor(mapclr)
			surface.DrawRect(lx+2, ly+2, 21, 21)
			
			draw.SimpleText(map, "EJBStatBold", lx+27, ly+2, Color(0, 0, 0))
			lx = lx + tswidth
		end]]
	end
	panel.DoClick = function(self)
		if self.HoveringTime then
			net.Start("ejb_stats") net.WriteUInt(self.HoveringTime, 32) net.WriteBit(false) net.SendToServer()
		end
	end
	panel.DoRightClick = function(self)
		if self.HoveringTime then
			net.Start("ejb_stats") net.WriteUInt(self.HoveringTime, 32) net.WriteBit(true) net.SendToServer()
		end
	end
	
	StatFrame:MakePopup()
end
net.Receive("ejb_stats", function()
	EjbSvTime = os.time(net.ReadTable())
	EjbStats = net.ReadTable()
	CreateStatFrame()
end)

concommand.Add("ejb_reqstats", function()
	net.Start("ejb_stats") net.WriteUInt(0, 32) net.WriteBit(false) net.SendToServer()
end)